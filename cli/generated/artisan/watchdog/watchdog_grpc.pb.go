// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.19.6
// source: watchdog.proto

package watchdog

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	Watchdog_ListApplications_FullMethodName  = "/artisan.watchdog.Watchdog/ListApplications"
	Watchdog_GetApplication_FullMethodName    = "/artisan.watchdog.Watchdog/GetApplication"
	Watchdog_ListBuilds_FullMethodName        = "/artisan.watchdog.Watchdog/ListBuilds"
	Watchdog_ListVerifications_FullMethodName = "/artisan.watchdog.Watchdog/ListVerifications"
	Watchdog_GetSystemInfo_FullMethodName     = "/artisan.watchdog.Watchdog/GetSystemInfo"
	Watchdog_ExecuteCommand_FullMethodName    = "/artisan.watchdog.Watchdog/ExecuteCommand"
)

// WatchdogClient is the client API for Watchdog service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WatchdogClient interface {
	ListApplications(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ApplicationStatusList, error)
	GetApplication(ctx context.Context, in *ApplicationStatusRequest, opts ...grpc.CallOption) (*ApplicationStatusResponse, error)
	ListBuilds(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BuildStatusList, error)
	ListVerifications(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VerificationEntryList, error)
	GetSystemInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SystemInfo, error)
	ExecuteCommand(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandResponse, error)
}

type watchdogClient struct {
	cc grpc.ClientConnInterface
}

func NewWatchdogClient(cc grpc.ClientConnInterface) WatchdogClient {
	return &watchdogClient{cc}
}

func (c *watchdogClient) ListApplications(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ApplicationStatusList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApplicationStatusList)
	err := c.cc.Invoke(ctx, Watchdog_ListApplications_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watchdogClient) GetApplication(ctx context.Context, in *ApplicationStatusRequest, opts ...grpc.CallOption) (*ApplicationStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApplicationStatusResponse)
	err := c.cc.Invoke(ctx, Watchdog_GetApplication_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watchdogClient) ListBuilds(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BuildStatusList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BuildStatusList)
	err := c.cc.Invoke(ctx, Watchdog_ListBuilds_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watchdogClient) ListVerifications(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VerificationEntryList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(VerificationEntryList)
	err := c.cc.Invoke(ctx, Watchdog_ListVerifications_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watchdogClient) GetSystemInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SystemInfo, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SystemInfo)
	err := c.cc.Invoke(ctx, Watchdog_GetSystemInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watchdogClient) ExecuteCommand(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, Watchdog_ExecuteCommand_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WatchdogServer is the server API for Watchdog service.
// All implementations must embed UnimplementedWatchdogServer
// for forward compatibility.
type WatchdogServer interface {
	ListApplications(context.Context, *Empty) (*ApplicationStatusList, error)
	GetApplication(context.Context, *ApplicationStatusRequest) (*ApplicationStatusResponse, error)
	ListBuilds(context.Context, *Empty) (*BuildStatusList, error)
	ListVerifications(context.Context, *Empty) (*VerificationEntryList, error)
	GetSystemInfo(context.Context, *Empty) (*SystemInfo, error)
	ExecuteCommand(context.Context, *CommandRequest) (*CommandResponse, error)
	mustEmbedUnimplementedWatchdogServer()
}

// UnimplementedWatchdogServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedWatchdogServer struct{}

func (UnimplementedWatchdogServer) ListApplications(context.Context, *Empty) (*ApplicationStatusList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListApplications not implemented")
}
func (UnimplementedWatchdogServer) GetApplication(context.Context, *ApplicationStatusRequest) (*ApplicationStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApplication not implemented")
}
func (UnimplementedWatchdogServer) ListBuilds(context.Context, *Empty) (*BuildStatusList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBuilds not implemented")
}
func (UnimplementedWatchdogServer) ListVerifications(context.Context, *Empty) (*VerificationEntryList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVerifications not implemented")
}
func (UnimplementedWatchdogServer) GetSystemInfo(context.Context, *Empty) (*SystemInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSystemInfo not implemented")
}
func (UnimplementedWatchdogServer) ExecuteCommand(context.Context, *CommandRequest) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteCommand not implemented")
}
func (UnimplementedWatchdogServer) mustEmbedUnimplementedWatchdogServer() {}
func (UnimplementedWatchdogServer) testEmbeddedByValue()                  {}

// UnsafeWatchdogServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WatchdogServer will
// result in compilation errors.
type UnsafeWatchdogServer interface {
	mustEmbedUnimplementedWatchdogServer()
}

func RegisterWatchdogServer(s grpc.ServiceRegistrar, srv WatchdogServer) {
	// If the following call pancis, it indicates UnimplementedWatchdogServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&Watchdog_ServiceDesc, srv)
}

func _Watchdog_ListApplications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchdogServer).ListApplications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Watchdog_ListApplications_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchdogServer).ListApplications(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watchdog_GetApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchdogServer).GetApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Watchdog_GetApplication_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchdogServer).GetApplication(ctx, req.(*ApplicationStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watchdog_ListBuilds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchdogServer).ListBuilds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Watchdog_ListBuilds_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchdogServer).ListBuilds(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watchdog_ListVerifications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchdogServer).ListVerifications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Watchdog_ListVerifications_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchdogServer).ListVerifications(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watchdog_GetSystemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchdogServer).GetSystemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Watchdog_GetSystemInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchdogServer).GetSystemInfo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watchdog_ExecuteCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchdogServer).ExecuteCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Watchdog_ExecuteCommand_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchdogServer).ExecuteCommand(ctx, req.(*CommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Watchdog_ServiceDesc is the grpc.ServiceDesc for Watchdog service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Watchdog_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "artisan.watchdog.Watchdog",
	HandlerType: (*WatchdogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListApplications",
			Handler:    _Watchdog_ListApplications_Handler,
		},
		{
			MethodName: "GetApplication",
			Handler:    _Watchdog_GetApplication_Handler,
		},
		{
			MethodName: "ListBuilds",
			Handler:    _Watchdog_ListBuilds_Handler,
		},
		{
			MethodName: "ListVerifications",
			Handler:    _Watchdog_ListVerifications_Handler,
		},
		{
			MethodName: "GetSystemInfo",
			Handler:    _Watchdog_GetSystemInfo_Handler,
		},
		{
			MethodName: "ExecuteCommand",
			Handler:    _Watchdog_ExecuteCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "watchdog.proto",
}
